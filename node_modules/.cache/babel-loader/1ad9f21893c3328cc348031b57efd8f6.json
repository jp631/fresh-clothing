{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyA2ioyJCMKrGSwZKt94ya-ojzwfzFFT138\",\n  authDomain: \"fresh-clothing-db.firebaseapp.com\",\n  databaseURL: \"https://fresh-clothing-db.firebaseio.com\",\n  projectId: \"fresh-clothing-db\",\n  storageBucket: \"fresh-clothing-db.appspot.com\",\n  messagingSenderId: \"609714582858\",\n  appId: \"1:609714582858:web:2599cc7324c56c6faa3db3\",\n  measurementId: \"G-7RBH2W7X64\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {}\n  }\n\n  console.log(snapShot);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/jpdeveloper/workspace/fresh-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","createdAt","error","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACPC,EAAAA,MAAM,EAAE,yCADD;AAEPC,EAAAA,UAAU,EAAE,mCAFL;AAGPC,EAAAA,WAAW,EAAE,0CAHN;AAIPC,EAAAA,SAAS,EAAE,mBAJJ;AAKPC,EAAAA,aAAa,EAAE,+BALR;AAMPC,EAAAA,iBAAiB,EAAE,cANZ;AAOPC,EAAAA,KAAK,EAAE,2CAPA;AAQPC,EAAAA,aAAa,EAAE;AARR,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAQC,QAAR,EAAkBC,cAAlB,KAAsC;AACvE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAwBV,QAA9B;AACA,UAAMW,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBI,QAAAA,SAHgB;AAIhB,WAAGb;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOc,KAAP,EAAa,CAEd;AACF;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACD,CAxBA;AA0BNjB,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n        apiKey: \"AIzaSyA2ioyJCMKrGSwZKt94ya-ojzwfzFFT138\",\n        authDomain: \"fresh-clothing-db.firebaseapp.com\",\n        databaseURL: \"https://fresh-clothing-db.firebaseio.com\",\n        projectId: \"fresh-clothing-db\",\n        storageBucket: \"fresh-clothing-db.appspot.com\",\n        messagingSenderId: \"609714582858\",\n        appId: \"1:609714582858:web:2599cc7324c56c6faa3db3\",\n        measurementId: \"G-7RBH2W7X64\"\n      }\n\nexport const createUserProfileDocument = async ( userAuth, additionalData ) => {\n        if(!userAuth) return;\n\n        const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n        const snapShot = await userRef.get();\n\n        if(!snapShot.exists){\n          const { displayName, email} = userAuth;\n          const createAt = new Date();\n\n          try {\n            await userRef.set({\n              displayName,\n              email,\n              createdAt,\n              ...additionalData\n            })\n          } catch (error){\n\n          }\n        }\n\n        console.log(snapShot);\n      }\n\n firebase.initializeApp(config);\n\n export const auth = firebase.auth();\n export const firestore = firebase.firestore();\n\n const provider = new firebase.auth.GoogleAuthProvider();\n provider.setCustomParameters({ prompt: 'select_account'});\n export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n export default firebase"]},"metadata":{},"sourceType":"module"}